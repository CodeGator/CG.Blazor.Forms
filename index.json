{
  "api/CG.Blazor.Forms.Attributes.FormGeneratorAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.FormGeneratorAttribute.html",
    "title": "Class FormGeneratorAttribute",
    "keywords": "Class FormGeneratorAttribute This class is the base for all form generation attributes. Inheritance System.Object System.Attribute FormGeneratorAttribute FormValidationAttribute HtmlAttribute RenderObjectAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax public abstract class FormGeneratorAttribute : Attribute Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public virtual int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public virtual IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes."
  },
  "api/CG.Blazor.Forms.Attributes.FormValidationAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.FormValidationAttribute.html",
    "title": "Class FormValidationAttribute",
    "keywords": "Class FormValidationAttribute This class is a base for all form generaton validation attributes. Inheritance System.Object System.Attribute FormGeneratorAttribute FormValidationAttribute RenderDataAnnotationsValidatorAttribute RenderValidationSummaryAttribute Inherited Members FormGeneratorAttribute.ToAttributes() FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public abstract class FormValidationAttribute : FormGeneratorAttribute Remarks This attribute is only valid when placed on the class definition for the top-level model."
  },
  "api/CG.Blazor.Forms.Attributes.html": {
    "href": "api/CG.Blazor.Forms.Attributes.html",
    "title": "Namespace CG.Blazor.Forms.Attributes",
    "keywords": "Namespace CG.Blazor.Forms.Attributes Classes FormGeneratorAttribute This class is the base for all form generation attributes. FormValidationAttribute This class is a base for all form generaton validation attributes. HtmlAttribute This class is a base for all HTML specific form generation attributes. RenderCheckBoxAttribute This class is an attribute that, when applied to a bool property, causes the form generator to render the property as a checkbox HTML element. RenderDataAnnotationsValidatorAttribute This class is an attribute that, when applied to a class, causes the form generator to render a Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator tag, within the form. RenderInputColorAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a color HTML element. RenderInputDateAttribute This class is an attribute that, when applied to a DateTime property, causes the form generator to render the property as an date HTML element. RenderInputEmailAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as an email HTML element. RenderInputMonthAttribute This class is an attribute that, when applied to a DateTime property, causes the form generator to render the property as an month HTML element. RenderInputNumberAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a number HTML element. RenderInputPasswordAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a password HTML element. RenderInputRangeAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a range HTML element. RenderInputTelephoneAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a telephone HTML element. RenderInputTextAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as an input HTML element. RenderInputTimeAttribute This class is an attribute that, when applied to a TimeSpan property, causes the form generator to render the property as an time HTML element. RenderInputUrlAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as an URL HTML element. RenderInputWeekAttribute This class is an attribute that, when applied to a DateTime property, causes the form generator to render the property as an week HTML element. RenderMeterAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a meter HTML element. RenderObjectAttribute This class is an attribute that, when applied to a class, or an object property on a class, causes the form generator to render the properties of the object as HTML. RenderProgressAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a progress HTML element. RenderRadioGroupAttribute This class is an attribute that, when applied to a bool property, causes the form generator to render the property as a radio group HTML element. RenderSelectAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a select HTML element. RenderTextAreaAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a textarea HTML element. RenderValidationSummaryAttribute This class is an attribute that, when applied to a class, causes the form generator to render a Microsoft.AspNetCore.Components.Forms.ValidationSummary tag, withing the form."
  },
  "api/CG.Blazor.Forms.Attributes.HtmlAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.HtmlAttribute.html",
    "title": "Class HtmlAttribute",
    "keywords": "Class HtmlAttribute This class is a base for all HTML specific form generation attributes. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderCheckBoxAttribute RenderInputColorAttribute RenderInputDateAttribute RenderInputEmailAttribute RenderInputMonthAttribute RenderInputNumberAttribute RenderInputPasswordAttribute RenderInputRangeAttribute RenderInputTelephoneAttribute RenderInputTextAttribute RenderInputTimeAttribute RenderInputUrlAttribute RenderInputWeekAttribute RenderMeterAttribute RenderProgressAttribute RenderRadioGroupAttribute RenderSelectAttribute RenderTextAreaAttribute Inherited Members FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public abstract class HtmlAttribute : FormGeneratorAttribute Constructors HtmlAttribute() This constructor creates a new instance of HtmlAttribute class. Declaration protected HtmlAttribute() Properties AutoFocus This property indicates the component should automatically get focus when the page loads Declaration public bool AutoFocus { get; set; } Property Value Type Description System.Boolean Class This property contains user class names, separated by spaces. Declaration public string Class { get; set; } Property Value Type Description System.String Id This property contains the identifier for the element. Declaration public string Id { get; set; } Property Value Type Description System.String InputMode This property indicates the type of virtual keyboard configuration to use when editing this element or its contents. Values include none, text, tel, url, email, numeric, decimal, and search. Declaration public string InputMode { get; set; } Property Value Type Description System.String Label This property contains the label that will be displayed for the element. Declaration public string Label { get; set; } Property Value Type Description System.String Name This property contains the for the input control. Declaration public string Name { get; set; } Property Value Type Description System.String Style This property contains user styles, applied on top of the element's own classes and styles element. Declaration public string Style { get; set; } Property Value Type Description System.String TabIndex This property contains an integer attribute indicating if the element can take input focus (is focusable), if it should participate to sequential keyboard navigation. As all input types except for input of type hidden are focusable, this attribute should not be used on form controls, because doing so would require the management of the focus order for all elements within the document with the risk of harming usability and accessibility if done incorrectly. Declaration public string TabIndex { get; set; } Property Value Type Description System.String Methods ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides FormGeneratorAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderCheckBoxAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderCheckBoxAttribute.html",
    "title": "Class RenderCheckBoxAttribute",
    "keywords": "Class RenderCheckBoxAttribute This class is an attribute that, when applied to a bool property, causes the form generator to render the property as a checkbox HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderCheckBoxAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderCheckBoxAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: bool. Examples Here is an example of decorating a model property to render a checkbox: using CG.Blazor.Forms.Attributes; class MyModel { [RenderCheckBox] public bool MyProperty { get;set; } } Constructors RenderCheckBoxAttribute() This constructor creates a new instance of RenderCheckBoxAttribute class. Declaration public RenderCheckBoxAttribute() Properties Indeterminate This property indicates that the value of the checkbox is indeterminate rather than true or false Declaration public bool Indeterminate { get; set; } Property Value Type Description System.Boolean ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderDataAnnotationsValidatorAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderDataAnnotationsValidatorAttribute.html",
    "title": "Class RenderDataAnnotationsValidatorAttribute",
    "keywords": "Class RenderDataAnnotationsValidatorAttribute This class is an attribute that, when applied to a class, causes the form generator to render a Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator tag, within the form. Inheritance System.Object System.Attribute FormGeneratorAttribute FormValidationAttribute RenderDataAnnotationsValidatorAttribute Inherited Members FormGeneratorAttribute.ToAttributes() System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class RenderDataAnnotationsValidatorAttribute : FormValidationAttribute Remarks This attribute is only valid when placed on the class definition for the top-level model class. Examples Here is an example of decorating a model class to render a data annotations validator: using CG.Blazor.Forms.Attributes; [RenderDataAnnotationsValidator] class MyModel { } Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete."
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputColorAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputColorAttribute.html",
    "title": "Class RenderInputColorAttribute",
    "keywords": "Class RenderInputColorAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a color HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputColorAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex HtmlAttribute.ToAttributes() System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputColorAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render a color: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputColor] public string MyProperty { get;set; } } Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete."
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputDateAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputDateAttribute.html",
    "title": "Class RenderInputDateAttribute",
    "keywords": "Class RenderInputDateAttribute This class is an attribute that, when applied to a DateTime property, causes the form generator to render the property as an date HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputDateAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputDateAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: Datetime Examples Here is an example of decorating a model property to render a date: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputDate] public Datetime MyProperty { get;set; } } Constructors RenderInputDateAttribute() This constructor creates a new instance of RenderInputDateAttribute class. Declaration public RenderInputDateAttribute() Properties Max This property contains the maximum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property contains the minimum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Min { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the date. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputEmailAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputEmailAttribute.html",
    "title": "Class RenderInputEmailAttribute",
    "keywords": "Class RenderInputEmailAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as an email HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputEmailAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputEmailAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render an email: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputEmail] public string MyProperty { get;set; } } Constructors RenderInputEmailAttribute() This constructor creates a new instance of RenderInputEmailAttribute class. Declaration public RenderInputEmailAttribute() Properties MaxLength This property indicates the maximum number of characters the input should accept. Declaration public string MaxLength { get; set; } Property Value Type Description System.String MinLength This property indicates the minimum number of characters the input should accept. Declaration public string MinLength { get; set; } Property Value Type Description System.String Multiple This property indicates whether the control allows multiple, comma-separated, email addresses to be entered. Declaration public bool Multiple { get; set; } Property Value Type Description System.Boolean Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Pattern This property contains a regular expression the input's contents must match in order to be valid. Declaration public string Pattern { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Size This property indicates how many characters wide the input field should be. Declaration public string Size { get; set; } Property Value Type Description System.String SpellCheck This property indicates whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used Declaration public bool SpellCheck { get; set; } Property Value Type Description System.Boolean Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputMonthAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputMonthAttribute.html",
    "title": "Class RenderInputMonthAttribute",
    "keywords": "Class RenderInputMonthAttribute This class is an attribute that, when applied to a DateTime property, causes the form generator to render the property as an month HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputMonthAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputMonthAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: Datetime Examples Here is an example of decorating a model property to render a month: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputMonth] public Datetime MyProperty { get;set; } } Constructors RenderInputMonthAttribute() This constructor creates a new instance of RenderInputMonthAttribute class. Declaration public RenderInputMonthAttribute() Properties Max This property contains the maximum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property contains the minimum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Min { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the input. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputNumberAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputNumberAttribute.html",
    "title": "Class RenderInputNumberAttribute",
    "keywords": "Class RenderInputNumberAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a number HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputNumberAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputNumberAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: numeric. Which means, byte, int, long, float, double, or decimal. Examples Here is an example of decorating a model property to render a number: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputNumber] public long MyProperty { get;set; } } Constructors RenderInputNumberAttribute() This constructor creates a new instance of RenderInputNumberAttribute class. Declaration public RenderInputNumberAttribute() Properties Max This property indicates the maximum number the input should accept. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property indicates the minimum number the input should accept. Declaration public string Min { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the input. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputPasswordAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputPasswordAttribute.html",
    "title": "Class RenderInputPasswordAttribute",
    "keywords": "Class RenderInputPasswordAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a password HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputPasswordAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputPasswordAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render a password: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputPassword] public string MyProperty { get;set; } } Constructors RenderInputPasswordAttribute() This constructor creates a new instance of RenderInputPasswordAttribute class. Declaration public RenderInputPasswordAttribute() Properties MaxLength This property indicates the maximum number of characters the input should accept. Declaration public string MaxLength { get; set; } Property Value Type Description System.String MinLength This property indicates the minimum number of characters the input should accept. Declaration public string MinLength { get; set; } Property Value Type Description System.String Pattern This property contains a regular expression the input's contents must match in order to be valid. Declaration public string Pattern { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Size This property indicates how many characters wide the input field should be. Declaration public string Size { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputRangeAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputRangeAttribute.html",
    "title": "Class RenderInputRangeAttribute",
    "keywords": "Class RenderInputRangeAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a range HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputRangeAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputRangeAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: numeric. Which means, byte, int, long, float, double, or decimal. Examples Here is an example of decorating a model property to render a range: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputRange] public int MyProperty { get;set; } } Constructors RenderInputRangeAttribute() This constructor creates a new instance of RenderInputRangeAttribute class. Declaration public RenderInputRangeAttribute() Properties Max This property indicates the maximum number the input should accept. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property indicates the minimum number the input should accept. Declaration public string Min { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the input. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputTelephoneAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputTelephoneAttribute.html",
    "title": "Class RenderInputTelephoneAttribute",
    "keywords": "Class RenderInputTelephoneAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a telephone HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputTelephoneAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputTelephoneAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render a telephone: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputTelephone] public string MyProperty { get;set; } } Constructors RenderInputTelephoneAttribute() This constructor creates a new instance of RenderInputTelephoneAttribute class. Declaration public RenderInputTelephoneAttribute() Properties MaxLength This property indicates the maximum number of characters the input should accept. Declaration public string MaxLength { get; set; } Property Value Type Description System.String MinLength This property indicates the minimum number of characters the input should accept. Declaration public string MinLength { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Pattern This property contains a regular expression the input's contents must match in order to be valid. Declaration public string Pattern { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Size This property indicates how many characters wide the input field should be. Declaration public string Size { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputTextAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputTextAttribute.html",
    "title": "Class RenderInputTextAttribute",
    "keywords": "Class RenderInputTextAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as an input HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputTextAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputTextAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render an input: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputText] public string MyProperty { get;set; } } Constructors RenderInputTextAttribute() This constructor creates a new instance of RenderInputTextAttribute class. Declaration public RenderInputTextAttribute() Properties MaxLength This property indicates the maximum number of characters the input should accept. Declaration public string MaxLength { get; set; } Property Value Type Description System.String MinLength This property indicates the minimum number of characters the input should accept. Declaration public string MinLength { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Pattern This property contains a regular expression the input's contents must match in order to be valid. Declaration public string Pattern { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Size This property indicates how many characters wide the input field should be. Declaration public string Size { get; set; } Property Value Type Description System.String SpellCheck This property indicates whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used Declaration public bool SpellCheck { get; set; } Property Value Type Description System.Boolean Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputTimeAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputTimeAttribute.html",
    "title": "Class RenderInputTimeAttribute",
    "keywords": "Class RenderInputTimeAttribute This class is an attribute that, when applied to a TimeSpan property, causes the form generator to render the property as an time HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputTimeAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputTimeAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: TimeSpan Examples Here is an example of decorating a model property to render a time: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputTime] public TimeSpan MyProperty { get;set; } } Constructors RenderInputTimeAttribute() This constructor creates a new instance of RenderInputTimeAttribute class. Declaration public RenderInputTimeAttribute() Properties Max This property contains the maximum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property contains the minimum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Min { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. The values should be in 24 hour format: ##:##, without embedded spaces or a trailing AM or PM. Declaration public string Options { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the date. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputUrlAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputUrlAttribute.html",
    "title": "Class RenderInputUrlAttribute",
    "keywords": "Class RenderInputUrlAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as an URL HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputUrlAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputUrlAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string Examples Here is an example of decorating a model property to render a URL: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputUrl] public string MyProperty { get;set; } } Constructors RenderInputUrlAttribute() This constructor creates a new instance of RenderInputUrlAttribute class. Declaration public RenderInputUrlAttribute() Properties MaxLength This property indicates the maximum number of characters the input should accept. Declaration public string MaxLength { get; set; } Property Value Type Description System.String MinLength This property indicates the minimum number of characters the input should accept. Declaration public string MinLength { get; set; } Property Value Type Description System.String Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Pattern This property contains a regular expression the input's contents must match in order to be valid. Declaration public string Pattern { get; set; } Property Value Type Description System.String Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Size This property indicates how many characters wide the input field should be. Declaration public string Size { get; set; } Property Value Type Description System.String SpellCheck This property indicates whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used Declaration public bool SpellCheck { get; set; } Property Value Type Description System.Boolean Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderInputWeekAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderInputWeekAttribute.html",
    "title": "Class RenderInputWeekAttribute",
    "keywords": "Class RenderInputWeekAttribute This class is an attribute that, when applied to a DateTime property, causes the form generator to render the property as an week HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderInputWeekAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderInputWeekAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string Examples Here is an example of decorating a model property to render a week: using CG.Blazor.Forms.Attributes; class MyModel { [RenderInputWeek] public string MyProperty { get;set; } } Constructors RenderInputWeekAttribute() This constructor creates a new instance of RenderInputWeekAttribute class. Declaration public RenderInputWeekAttribute() Properties Max This property contains the maximum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property contains the minimum date for the element. The format MUST be yyyy-MM-dd. Declaration public string Min { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the date. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderMeterAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderMeterAttribute.html",
    "title": "Class RenderMeterAttribute",
    "keywords": "Class RenderMeterAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a meter HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderMeterAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderMeterAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: numeric. Which means, byte, int, long, float, double, or decimal. Examples Here is an example of decorating a model property to render a meter: using CG.Blazor.Forms.Attributes; class MyModel { [RenderMeter] public float MyProperty { get;set; } } Constructors RenderMeterAttribute() This constructor creates a new instance of RenderMeterAttribute class. Declaration public RenderMeterAttribute() Properties High This property contains the lower numeric bound of the high end of the measured range. This must be less than the maximum value (max attribute), and it also must be greater than the low value and minimum value (low attribute and min attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the high value is equal to the maximum value. Declaration public string High { get; set; } Property Value Type Description System.String Low This property contains the upper numeric bound of the low end of the measured range. This must be greater than the minimum value (min attribute), and it also must be less than the high value and maximum value (high attribute and max attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the low value is equal to the minimum value. Declaration public string Low { get; set; } Property Value Type Description System.String Max This property indicates the upper numeric bound of the measured range. This must be greater than the minimum value (min attribute), if specified. If unspecified, the maximum value is 1. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property indicates the lower numeric bound of the measured range. This must be less than the maximum value (max attribute), if specified. If unspecified, the minimum value is 0. Declaration public string Min { get; set; } Property Value Type Description System.String Optimum This property indicates the optimal numeric value. It must be within the range (as defined by the min attribute and max attribute). When used with the low attribute and high attribute, it gives an indication where along the range is considered preferable. For example, if it is between the min attribute and the low attribute, then the lower range is considered preferred. The browser may color the meter's bar differently depending on whether the value is less than or equal to the optimum value. Declaration public string Optimum { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the input. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderObjectAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderObjectAttribute.html",
    "title": "Class RenderObjectAttribute",
    "keywords": "Class RenderObjectAttribute This class is an attribute that, when applied to a class, or an object property on a class, causes the form generator to render the properties of the object as HTML. Inheritance System.Object System.Attribute FormGeneratorAttribute RenderObjectAttribute Inherited Members FormGeneratorAttribute.ToAttributes() System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property, AllowMultiple = false)] public class RenderObjectAttribute : FormGeneratorAttribute Remarks This attribute is only valid when placed on a property of type: object, or on a class definition itself. Examples Here is an example of decorating a model property to render: using CG.Blazor.Forms.Attributes; class MyModel { [RenderObject] public MyModel2 MyProperty { get;set; } } Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete."
  },
  "api/CG.Blazor.Forms.Attributes.RenderProgressAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderProgressAttribute.html",
    "title": "Class RenderProgressAttribute",
    "keywords": "Class RenderProgressAttribute This class is an attribute that, when applied to a numeric property, causes the form generator to render the property as a progress HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderProgressAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderProgressAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: numeric. Which means, byte, int, long, float, double, or decimal. Examples Here is an example of decorating a model property to render a progress: using CG.Blazor.Forms.Attributes; class MyModel { [RenderMeter] public float MyProperty { get;set; } } Constructors RenderProgressAttribute() This constructor creates a new instance of RenderProgressAttribute class. Declaration public RenderProgressAttribute() Properties High This property contains the lower numeric bound of the high end of the measured range. This must be less than the maximum value (max attribute), and it also must be greater than the low value and minimum value (low attribute and min attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the high value is equal to the maximum value. Declaration public string High { get; set; } Property Value Type Description System.String Low This property contains the upper numeric bound of the low end of the measured range. This must be greater than the minimum value (min attribute), and it also must be less than the high value and maximum value (high attribute and max attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the low value is equal to the minimum value. Declaration public string Low { get; set; } Property Value Type Description System.String Max This property indicates the upper numeric bound of the measured range. This must be greater than the minimum value (min attribute), if specified. If unspecified, the maximum value is 1. Declaration public string Max { get; set; } Property Value Type Description System.String Min This property indicates the lower numeric bound of the measured range. This must be less than the maximum value (max attribute), if specified. If unspecified, the minimum value is 0. Declaration public string Min { get; set; } Property Value Type Description System.String Optimum This property indicates the optimal numeric value. It must be within the range (as defined by the min attribute and max attribute). When used with the low attribute and high attribute, it gives an indication where along the range is considered preferable. For example, if it is between the min attribute and the low attribute, then the lower range is considered preferred. The browser may color the meter's bar differently depending on whether the value is less than or equal to the optimum value. Declaration public string Optimum { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Step This property contains the stepping interval, when clicking up and down spinner buttons and validating the input. Declaration public string Step { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderRadioGroupAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderRadioGroupAttribute.html",
    "title": "Class RenderRadioGroupAttribute",
    "keywords": "Class RenderRadioGroupAttribute This class is an attribute that, when applied to a bool property, causes the form generator to render the property as a radio group HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderRadioGroupAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderRadioGroupAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: bool. Examples Here is an example of decorating a model property to render a radio group: using CG.Blazor.Forms.Attributes; class MyModel { [RenderRadioGroup(Options = \"A B C\")] public string MyProperty { get;set; } } Constructors RenderRadioGroupAttribute() This constructor creates a new instance of RenderRadioGroupAttribute class. Declaration public RenderRadioGroupAttribute() Properties Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String ReadOnly This property indicates the component is read only. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderSelectAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderSelectAttribute.html",
    "title": "Class RenderSelectAttribute",
    "keywords": "Class RenderSelectAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a select HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderSelectAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderSelectAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render an select: using CG.Blazor.Forms.Attributes; class MyModel { [RenderSelect] public string MyProperty { get;set; } } Constructors RenderSelectAttribute() This constructor creates a new instance of RenderSelectAttribute class. Declaration public RenderSelectAttribute() Properties Disabled This property indicates that the user cannot interact with the control. Declaration public bool Disabled { get; set; } Property Value Type Description System.Boolean Options This property contains a list of pre-defined autocomplete options for the element. The values should be space separated. Declaration public string Options { get; set; } Property Value Type Description System.String Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderTextAreaAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderTextAreaAttribute.html",
    "title": "Class RenderTextAreaAttribute",
    "keywords": "Class RenderTextAreaAttribute This class is an attribute that, when applied to a string property, causes the form generator to render the property as a textarea HTML element. Inheritance System.Object System.Attribute FormGeneratorAttribute HtmlAttribute RenderTextAreaAttribute Inherited Members HtmlAttribute.AutoFocus HtmlAttribute.Class HtmlAttribute.Id HtmlAttribute.InputMode HtmlAttribute.Label HtmlAttribute.Name HtmlAttribute.Style HtmlAttribute.TabIndex System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RenderTextAreaAttribute : HtmlAttribute Remarks This attribute is only valid when placed on a property of type: string. Examples Here is an example of decorating a model property to render a textarea: using CG.Blazor.Forms.Attributes; class MyModel { [RenderTextArea] public string MyProperty { get;set; } } Constructors RenderTextAreaAttribute() This constructor creates a new instance of the RenderTextAreaAttribute class. Declaration public RenderTextAreaAttribute() Properties Cols This property indicates the number of characters to show, on the component. Declaration public int Cols { get; set; } Property Value Type Description System.Int32 Disabled This property indicates that the user cannot interact with the control. Declaration public bool Disabled { get; set; } Property Value Type Description System.Boolean Placeholder This property contains a short hint that describes the expected value of the component. Declaration public string Placeholder { get; set; } Property Value Type Description System.String Rows This property indicates the number of rows to show, on the component. Declaration public int Rows { get; set; } Property Value Type Description System.Int32 Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete. ToAttributes() This method can be overridden to produce a table of named attributes. Declaration public override IDictionary<string, object> ToAttributes() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > A table of named attributes. Overrides HtmlAttribute.ToAttributes()"
  },
  "api/CG.Blazor.Forms.Attributes.RenderValidationSummaryAttribute.html": {
    "href": "api/CG.Blazor.Forms.Attributes.RenderValidationSummaryAttribute.html",
    "title": "Class RenderValidationSummaryAttribute",
    "keywords": "Class RenderValidationSummaryAttribute This class is an attribute that, when applied to a class, causes the form generator to render a Microsoft.AspNetCore.Components.Forms.ValidationSummary tag, withing the form. Inheritance System.Object System.Attribute FormGeneratorAttribute FormValidationAttribute RenderValidationSummaryAttribute Inherited Members FormGeneratorAttribute.ToAttributes() System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms.Attributes Assembly : CG.Blazor.Forms.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class RenderValidationSummaryAttribute : FormValidationAttribute Remarks This attribute is only valid when placed on the class definition for the top-level model class. Examples Here is an example of decorating a model class to render a validation summary: using CG.Blazor.Forms.Attributes; [RenderValidationSummary] class MyModel { } Methods Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) This method is called by the form generator to generate content for the specified property. Declaration public override int Generate(RenderTreeBuilder builder, int index, IHandleEvent eventTarget, Stack<object> path, PropertyInfo prop, ILogger<IFormGenerator> logger) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The event target to use for the operation. System.Collections.Generic.Stack < System.Object > path The path to the current model. System.Reflection.PropertyInfo prop The reflection information for the property. Microsoft.Extensions.Logging.ILogger < IFormGenerator > logger The logger to use for the operation. Returns Type Description System.Int32 The index after rendering is complete. Overrides FormGeneratorAttribute.Generate(RenderTreeBuilder, Int32, IHandleEvent, Stack<Object>, PropertyInfo, ILogger<IFormGenerator>) Exceptions Type Condition System.ArgumentException This exception is thrown whenever one of more arguments are missing, or invalid. FormGenerationException This exception is thrown whenever the rendering operation fails to complete."
  },
  "api/CG.Blazor.Forms.DynamicForm-1.html": {
    "href": "api/CG.Blazor.Forms.DynamicForm-1.html",
    "title": "Class DynamicForm<T>",
    "keywords": "Class DynamicForm<T> This class is the code-behind for the DynamicForm<T> razor component. Inheritance System.Object DynamicForm<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms Assembly : CG.Blazor.Forms.dll Syntax public class DynamicForm<T> Type Parameters Name Description T The type associated with the component. Constructors DynamicForm() This constructor creates a new instance of the DynamicForm<T> class. Declaration public DynamicForm() Properties ChildContent This property contains any child content for the form. Declaration public RenderFragment ChildContent { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment ChildContentAfter This property indicates whether the child content should be rendered before, or after the generated content. True to render the child content before the rendered content; false to render the child content after the rendered content. Declaration [Parameter] public bool ChildContentAfter { get; set; } Property Value Type Description System.Boolean Model This parameter contains a reference to the data model for the form. Declaration [Parameter] public T Model { get; set; } Property Value Type Description T Remarks Any type can be used as a model, for form generation, but it was designed to work with a simple, to moderately complex POCO class, containing properties that return either primitive types, or, other POCO references. NoForm This parameter indicates whether the model and it's properties should be rendered inside a form, or not. True to render just the properties on the model; False to render the model inside an Microsoft.AspNetCore.Components.Forms.EditForm HTML tag. Declaration [Parameter] public bool NoForm { get; set; } Property Value Type Description System.Boolean Remarks Setting this value to True prevents the form generator from wrapping the properties of the Model object in an Microsoft.AspNetCore.Components.Forms.EditForm component. That, in turn, prevents any of the form related callbacks from ever getting invoked, since there isn't a form to invoke them. This property helps when you need dynamic content, but, you want to handle the Microsoft.AspNetCore.Components.Forms.EditForm part yourself. OnInvalidSubmit This parameter contains a callback for the OnInvalidSubmit event. Declaration [Parameter] public EventCallback<EditContext> OnInvalidSubmit { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.EventCallback < Microsoft.AspNetCore.Components.Forms.EditContext > Remarks This callback is optional. It will be called whenever the form is submitted with one or more invalid form values. As such, it will only be called if the NoForm property is set to false, and the Model property has been set to a valid POCO reference, and the model's class has been decorated with a attribute (or equivilant), and at least one or more properties on the model have a value (or values) that fail form validation. OnSubmit This parameter contains a callback for the OnSubmit event. Declaration [Parameter] public EventCallback<EditContext> OnSubmit { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.EventCallback < Microsoft.AspNetCore.Components.Forms.EditContext > Remarks This callback is optional. It will be called whenever the form is submitted by the user, whether or not the form's values would otherwise pass validation, or not. As such, it will only be called if the property is set to false, and the property has been set to a valid POCO reference. OnValidSubmit This parameter contains a callback for the OnValidSubmit event. Declaration [Parameter] public EventCallback<EditContext> OnValidSubmit { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.EventCallback < Microsoft.AspNetCore.Components.Forms.EditContext > Remarks This callback is optional. It will be called whenever the form is submitted with valid form values. As such, it will only be called if the property is set to false, and the property has been set to a valid POCO reference, and the model's class has been decorated with a attribute (or equivilant). ShowResetButton This parameter indicates whether the form should display a reset button, or not. True to show; False otherwise. Declaration [Parameter] public bool ShowResetButton { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.Blazor.Forms.html": {
    "href": "api/CG.Blazor.Forms.html",
    "title": "Namespace CG.Blazor.Forms",
    "keywords": "Namespace CG.Blazor.Forms Classes DynamicForm<T> This class is the code-behind for the DynamicForm<T> razor component. RenderTreeBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder type."
  },
  "api/CG.Blazor.Forms.RenderTreeBuilderExtensions.html": {
    "href": "api/CG.Blazor.Forms.RenderTreeBuilderExtensions.html",
    "title": "Class RenderTreeBuilderExtensions",
    "keywords": "Class RenderTreeBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder type. Inheritance System.Object RenderTreeBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Forms Assembly : CG.Blazor.Forms.dll Syntax public static class RenderTreeBuilderExtensions Methods RenderUIComponent<T>(RenderTreeBuilder, Int32, Action<RenderTreeBuilder>, IDictionary<String, Object>) This method renders the specified UI component. Declaration public static int RenderUIComponent<T>(this RenderTreeBuilder builder, int index, Action<RenderTreeBuilder> contentDelegate = null, IDictionary<string, object> attributes = null) where T : class, IComponent Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. System.Action < Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder > contentDelegate An optional delegate for building any content for the component. System.Collections.Generic.IDictionary < System.String , System.Object > attributes Optional table of named attributes. Returns Type Description System.Int32 The index after rendering is complete. Type Parameters Name Description T The type of UI component to render. RenderUIElement(RenderTreeBuilder, Int32, String, Action<RenderTreeBuilder>, IDictionary<String, Object>) This method renders the specified UI element. Declaration public static int RenderUIElement(this RenderTreeBuilder builder, int index, string elementType, Action<RenderTreeBuilder> contentDelegate = null, IDictionary<string, object> attributes = null) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The builder to use for the operation. System.Int32 index The index to use for the operation. System.String elementType The type of element to render. System.Action < Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder > contentDelegate An optional delegate for building any content for the component. System.Collections.Generic.IDictionary < System.String , System.Object > attributes Optional table of named attributes. Returns Type Description System.Int32 The index after rendering is complete."
  },
  "api/CG.Blazor.Forms.Services.FormGenerationException.html": {
    "href": "api/CG.Blazor.Forms.Services.FormGenerationException.html",
    "title": "Class FormGenerationException",
    "keywords": "Class FormGenerationException This class represents a form generation exception. Inheritance System.Object System.Exception FormGenerationException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Blazor.Forms.Services Assembly : CG.Blazor.Forms.dll Syntax [Serializable] public class FormGenerationException : Exception, ISerializable Constructors FormGenerationException() This constructor creates a new instance of the FormGenerationException class. Declaration public FormGenerationException() FormGenerationException(SerializationInfo, StreamingContext) This constructor creates a new instance of the FormGenerationException class. Declaration public FormGenerationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. FormGenerationException(String) This constructor creates a new instance of the FormGenerationException class. Declaration public FormGenerationException(string message) Parameters Type Name Description System.String message The message to use for the exception. FormGenerationException(String, Exception) This constructor creates a new instance of the FormGenerationException class. Declaration public FormGenerationException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Blazor.Forms.Services.html": {
    "href": "api/CG.Blazor.Forms.Services.html",
    "title": "Namespace CG.Blazor.Forms.Services",
    "keywords": "Namespace CG.Blazor.Forms.Services Classes FormGenerationException This class represents a form generation exception. Interfaces IFormGenerator This interface represents an object that generates HTML forms."
  },
  "api/CG.Blazor.Forms.Services.IFormGenerator.html": {
    "href": "api/CG.Blazor.Forms.Services.IFormGenerator.html",
    "title": "Interface IFormGenerator",
    "keywords": "Interface IFormGenerator This interface represents an object that generates HTML forms. Namespace : CG.Blazor.Forms.Services Assembly : CG.Blazor.Forms.dll Syntax public interface IFormGenerator Methods Generate(RenderTreeBuilder, IHandleEvent, Object) This method generated an HTML form using a POCO model and the specified Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder object. Declaration void Generate(RenderTreeBuilder builder, IHandleEvent eventTarget, object model) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder The render tree builder to use for the operation. Microsoft.AspNetCore.Components.IHandleEvent eventTarget The target for any form related events. System.Object model The POCO data model to use for the operation. Remarks The properties on the associated POCO model must be decorated with one or more form generation attribute(s) in order for anything to be generated. Undecorated properties on the associated POCO model are ignored during form generation. Exceptions Type Condition FormGenerationException This exception is thrown whenever the generation operation fails to complete."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Blazor.Forms.dll Syntax public static class ServiceCollectionExtensions Methods AddFormGeneration(IServiceCollection) This method registers specific IFormGenerator strategies for dynamically generating forms. Declaration public static IServiceCollection AddFormGeneration(this IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever a required argument is missing or invalid."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Blazor.Forms.dll contains server side Blazor forms extensions used by other CodeGator packages."
  }
}